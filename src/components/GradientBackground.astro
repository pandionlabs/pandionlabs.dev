---
import { Icon } from 'astro-icon/components'

/**
 * GradientBackground Component
 *
 * @description A section with a full gradient background
 */
interface ButtonProps {
  link?: string
  linkText?: string
}

interface Props {
  /**
   * Optional button to display
   * @property {string} link - The URL the button should link to.
   * @property {string} linkText - The text to display on the button.
   */
  title?: string
  button?: ButtonProps
}

const { button, title } = Astro.props as Props
---

<div class="gradient-background container flex flex-col items-center gap-12 p-16 lg:rounded-xl">
  {title && <h2 class="text-center text-3xl md:text-4xl">{title}</h2>}
  <div class="mx-12">
    <slot />
  </div>
  {
    button && button.link && button.linkText && (
      <div class="mt-4 flex justify-center">
        <a href={button.link}>
          {button.linkText}
          <Icon name="lucide:arrow-right" />
        </a>
      </div>
    )
  }
</div>
<style lang="scss">
  @use '../assets/scss/base/mixins' as *;

  .gradient-background {
    background-image: linear-gradient(
      315deg,
      light-dark(var(--color-primary-100), var(--color-secondary-100)) 25%,
      light-dark(var(--color-secondary-100), var(--color-primary-200))
    );
  }

  a,
  a:visited {
    display: flex;
    align-items: center;
    gap: var(--space-2xs);
    border: 3px solid var(--color-neutral-900);
    border-radius: var(--radius-s);
    padding: var(--space-s);
    color: var(--color-neutral-900);
    font-weight: bold;
    text-decoration: none;

    @include text-decoration(transparent, currentColor);

    [data-icon] {
      transition: translate var(--animation-speed-fast) var(--cubic-bezier);
    }

    &:where(:hover, :focus) {
      background-color: var(--color-neutral-900);
      color: var(--color-neutral-100);
      text-decoration: underline;

      [data-icon] {
        translate: 5px 0;
      }
    }
  }
</style>
